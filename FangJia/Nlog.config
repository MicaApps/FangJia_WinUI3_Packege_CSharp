<?xml version="1.0" encoding="utf-8" ?>
<!--suppress XmlHighlighting -->
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      internalLogIncludeTimestamp="true"
      internalLogFile="${basedir}/nlog-internal.log"
      internalLogLevel="Warn">

	<!--输出目标,往哪里输出-->
	<targets async="true">
		<!--此部分中的所有目标将自动异步-->
		<default-wrapper xsi:type="AsyncWrapper"/>
		<target xsi:type="Database"
		        name="db"
		        dbProvider="Microsoft.Data.Sqlite.SqliteConnection, Microsoft.Data.Sqlite"
		        connectionString="Data Source=&quot;${basedir}/Log.db&quot;;">
			<commandText>
				insert into Logs (TimestampUtc, Application, Level, Message, Exception, Logger, EventId)
				values ((strftime('%s', @timestamputc) * 1000) + (strftime('%f', @timestamputc) - strftime('%S', @timestamputc)) * 1000, @application, @level, @message, @exception, @logger, @EventId);
			</commandText>
			<parameter name="@timestamputc" layout="${longdate}" />
			<parameter name="@application" layout="FangJia" />
			<parameter name="@level" layout="${uppercase:${level}}" />
			<parameter name="@message" layout="${message}" />
			<parameter name="@exception" layout="${exception:format=tostring}" />
			<parameter name="@logger" layout="${logger}" />
			<parameter name="@EventId" layout="${event-properties:item=EventId_Id:whenEmpty=0}" />
		</target>

		<target
				xsi:type="ColoredConsole"
				name="colorConsole"
				encoding="utf-8"
				detectConsoleAvailable="false"
				detectOutputRedirected="false"
				useDefaultRowHighlightingRules="false"
				header="--------------------"
				layout="${longdate}|${level:uppercase=true}|${logger}|${message}|${exception} ${newline} ${stacktrace} ${newline}"
				footer="---------------------"
		>
			<highlight-row condition="level == LogLevel.Trace" foregroundColor="DarkGray"/>
			<highlight-row condition="level == LogLevel.Debug" foregroundColor="DarkBlue"/>
			<highlight-row condition="level == LogLevel.Info" foregroundColor="White"/>
			<highlight-row condition="level == LogLevel.Warn" foregroundColor="DarkYellow"/>
			<highlight-row condition="level == LogLevel.Error" foregroundColor="Red"/>
			<highlight-row condition="level == LogLevel.Fatal" foregroundColor="DarkRed"/>
		</target>
	</targets>

	<!--规则配置,final - 最终规则匹配后不处理任何规则-->
	<!--定义使用哪个target输出-->
	<rules>
		<!-- 优先级从高到低依次为：OFF、FATAL、ERROR、WARN、INFO、DEBUG、TRACE、 ALL -->
		<!-- 将所有日志输出到数据库 -->
		<logger name="*" minlevel="Debug" writeTo="db" />

		<!-- 将所有日志输出到控制台  -->
		<logger name="*" minlevel="Debug" writeTo="colorConsole"/>

	</rules>
</nlog>